#!/usr/bin/env node

const fetch = require("node-fetch");
const yargs = require("yargs");

const argv = yargs
  .example("./scrape_crowdfunder [options] http://example.com/projects")
  .option("verbose", {
    alias: "v",
    description: "Run verbosely",
    type: "boolean"
  })
  .hide("version")
  .help()
  .alias("help", "h").argv;

const cheerio = require("cheerio");
const verbose = argv.verbose;
const index_url = argv._[0];

function abort(message) {
  process.stderr.write(message + "\n");
  process.exit(1);
}

async function fetchAndParse(url, verbose) {
  if (verbose) {
    process.stdout.write(`Fetching: GET ${url} ... `);
  }
  let response;
  let status;
  let error_message;
  await fetch(url)
    .then(res => {
      response = res;
    })
    .catch(err => {
      if (verbose) {
        error_message = err.message;
      }
    });
  let html;
  if (response) {
    status = response.status;
    if (status != 200) {
      if (verbose) {
        console.log(`HTTP error status for ${url} - ${status}`);
      }
      return { status: status, $: undefined };
    } else {
      html = await response.text();
      if (verbose) {
        console.log(`status ${status}, ${html.length} bytes`);
      }
      return { status: status, $: cheerio.load(html) };
    }
  } else {
    if (verbose) {
      console.log(`HTTP error status for ${url} - ${error_message}`);
    }
    return { status: "???", $: undefined };
  }
}

async function getIndex(url, verbose) {
  const { status, $ } = await fetchAndParse(url, verbose);
  if (status === 200) {
    const detailPageLinks = $(".campaign-details a.campaign-link")
      .get()
      .map(link => {
        return $(link).attr("href");
      });
    if (detailPageLinks.length === 0) {
      abort("No projects found, has the site changed? Check the URL given?");
    } else {
      return {
        detailPageLinks: detailPageLinks,
        nextPaginationLink: undefined
      };
    }
  } else {
    abort(
      `Projects page returned HTTP ${status} - Is the site down? Check the URL given?`
    );
  }
}

if (index_url) {
  getIndex(index_url, verbose);
} else {
  abort(
    "Please provide the url of the list of campaigns, i.e. './scrape_crowdfunder http://example.com/projects'"
  );
}
