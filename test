#!/usr/bin/env ruby
# frozen_string_literal: true

require 'rubygems'
require 'bundler/setup'
require 'pp'
require 'pry'
require 'capybara'
require "minitest/autorun"

SCRAPER_PATH = ARGV.first
unless SCRAPER_PATH and File.exist?(SCRAPER_PATH)
  raise ArgumentError, "Please provide the scraper you want to test, i.e. './test ruby/scrape_crowdfunder'"
end

class TestScraper < Minitest::Test

  def setup
    app             = proc { |_env| [200, {}, ['Hello, Sailor!']] }
    server          = Capybara::Server.new(app).boot
    @testserver_url = "http://#{server.host}:#{server.port}"
  end
  
  def run_scraper
    path, script = SCRAPER_PATH.split("/")
    command = ""
    # We need to cd into any sub-folder(s) so the scripts there can do setup like rvm, bundler, nvm, etc.
    command += "cd #{path} && " if path
    command += "./#{script}"
    command += " #{@testserver_url}"
    # We need to have a "clean" Bundler env (i.e., forget any currently loaded gems),
    # as the script called might be another Ruby script, with its own Gemfile, and by default
    # shelling out "keeps" the gems from this test runner, making the script fail
    Bundler.with_original_env do
      `bash -c '#{command}'`
    end
  end

  def test_index_page_has_no_projects
    assert_equal "No projects found, has the site changed? Check the URL given?", run_scraper
  end

  def test_index_page_returns_404
    skip "TODO"
  end

  def test_page_1_returns_404
    skip "TODO"
  end

  def test_detail_page_1_returns_404
    skip "TODO"
  end

  def test_simple_success_case
    # TODO: Set up links and data so that there is one project on the first index page, no pagination links
    assert_equal "1 campaigns, 100€ total, 80€ remaining, 20€ earned", run_scraper
  end

  def test_success_with_pagination
    # TODO: Set it up so index page has 8 projects, and 1 extra page with 1 more project on it
    assert_equal "9 campaigns, 900€ total, 720€ remaining, 180€ earned", run_scraper
  end

  def test_verbose_mode_is_enabled
    # Use the simple case, but check for the full output
    skip "TODO"
  end
end
